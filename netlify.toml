[build]
  command = "npm run build"
  publish = "dist"
  functions = "api"

[build.environment]
  NODE_VERSION = "22"

# Redirects
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200
  force = true
  priority = 100

[[redirects]]
  from = "/service-worker.js"
  to = "/service-worker.js"
  status = 200
  force = true
  priority = 90

[[redirects]]
  from = "/assets/*"
  to = "/assets/:splat"
  status = 200
  priority = 80

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = true
  priority = 50

# Service Worker - ensure correct MIME type and prevent transformations
[[headers]]
  for = "/service-worker.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "no-cache, no-store, must-revalidate"
    X-Content-Type-Options = "nosniff"
    Content-Disposition = "inline"
    Pragma = "no-cache"
    # Prevent Netlify from processing this file
    X-Netlify-Original-Filename = "service-worker.js"

# Offline fallback page
[[headers]]
  for = "/offline.html"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# Global security headers and HTML cache control
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Content-Security-Policy = """
      default-src 'self' https://*.stripe.com https://*.stripe.network;
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.stripe.com https://*.stripe.network https://js.stripe.com;
      connect-src 'self' 
        https://*.stripe.com https://*.stripe.network https://api.stripe.com https://hooks.stripe.com
        https://*.netlify.app https://*.netlify.com
        https://*.supabase.co https://*.supabase.in wss://*.supabase.co
        https://*.helius-rpc.com https://*.alchemy.com https://*.projectserum.com
        https://rpc.ankr.com https://solana.public-rpc.com
        https://api.coingecko.com;
      frame-src 'self' https://*.stripe.com https://*.stripe.network https://js.stripe.com https://hooks.stripe.com;
      img-src 'self' data: https://*.stripe.com https://*.netlify.app https://*.netlify.com https://*.supabase.co;
      style-src 'self' 'unsafe-inline' https://*.stripe.com https://fonts.googleapis.com;
      font-src 'self' https://fonts.gstatic.com;
      worker-src 'self' blob:;
    """
    # Short cache for HTML files
    Cache-Control = "public, max-age=0, must-revalidate"

# Images with improved caching strategy
[[headers]]
  for = "/*.{jpg,jpeg,png,gif,webp,svg,avif}"
  [headers.values]
    Cache-Control = "public, max-age=86400, stale-while-revalidate=604800"
    X-Cache-Type = "IMAGES"
    X-Cache-Strategy = "dynamic"

# Static assets with hash (immutable) - most specific first
[[headers]]
  for = "/assets/*-*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Cache-Type = "STATIC"
    X-Cache-Strategy = "immutable"

# Regular static assets - more general pattern
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=86400, stale-while-revalidate=604800"
    X-Cache-Type = "ASSETS"
    X-Cache-Strategy = "dynamic"

# API responses - short cache with revalidation
[[headers]]
  for = "/.netlify/functions/*"
  [headers.values]
    Cache-Control = "public, max-age=60, stale-while-revalidate=300"
    X-Cache-Strategy = "dynamic"

# Supabase storage assets - with CORS headers
[[headers]]
  for = "/storage/*"
  [headers.values]
    Cache-Control = "public, max-age=86400, stale-while-revalidate=604800"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, HEAD, OPTIONS"
    Access-Control-Allow-Headers = "Accept, Authorization, Cache-Control, Content-Type, Keep-Alive, Origin, X-Client-Info"
    Access-Control-Expose-Headers = "Content-Length, Content-Range"
    Access-Control-Max-Age = "86400"
    Timing-Allow-Origin = "*"
    X-Cache-Type = "IMAGES"
    X-Cache-Strategy = "dynamic"

# Additional headers for Supabase render endpoint
[[headers]]
  for = "/.netlify/functions/supabase-proxy/*"
  [headers.values]
    Cache-Control = "public, max-age=86400, stale-while-revalidate=604800"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, HEAD, OPTIONS"
    Access-Control-Allow-Headers = "Accept, Authorization, Cache-Control, Content-Type, Keep-Alive, Origin, X-Client-Info"
    Access-Control-Expose-Headers = "Content-Length, Content-Range"
    Access-Control-Max-Age = "86400"
    Timing-Allow-Origin = "*"
    X-Cache-Type = "IMAGES"
    X-Cache-Strategy = "dynamic"

# NFT Metadata
[[headers]]
  for = "/api/nft/*"
  [headers.values]
    Cache-Control = "public, max-age=3600, stale-while-revalidate=7200"
    X-Cache-Type = "NFT_METADATA"

[[headers]]
  for = "/api/metadata/*"
  [headers.values]
    Cache-Control = "public, max-age=3600, stale-while-revalidate=7200"
    X-Cache-Type = "NFT_METADATA"

# Product Data
[[headers]]
  for = "/api/products/*"
  [headers.values]
    Cache-Control = "public, max-age=300, stale-while-revalidate=600"
    X-Cache-Type = "PRODUCT_DATA"

[[headers]]
  for = "/api/categories/*"
  [headers.values]
    Cache-Control = "public, max-age=300, stale-while-revalidate=600"
    X-Cache-Type = "PRODUCT_DATA"

# Dynamic Data
[[headers]]
  for = "/api/pricing/*"
  [headers.values]
    Cache-Control = "public, max-age=30, stale-while-revalidate=60"
    X-Cache-Type = "DYNAMIC_DATA"

[[headers]]
  for = "/api/stock/*"
  [headers.values]
    Cache-Control = "public, max-age=30, stale-while-revalidate=60"
    X-Cache-Type = "DYNAMIC_DATA"

# No Cache for Critical Operations
[[headers]]
  for = "/api/blockchain/*"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Pragma = "no-cache"

[[headers]]
  for = "/api/checkout/*"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Pragma = "no-cache"

[[headers]]
  for = "/api/payment/*"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Pragma = "no-cache"

[[headers]]
  for = "/api/auth/*"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Pragma = "no-cache"

[[headers]]
  for = "/api/orders/*"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Pragma = "no-cache"

# Version endpoint
[[headers]]
  for = "/api/version"
  [headers.values]
    Cache-Control = "no-store, no-cache, must-revalidate"
    Pragma = "no-cache" 